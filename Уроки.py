# coding: utf-8
# Задачи на циклы

# 1) Напишите программу печати значений перевода расстояний из дюймов в сантиметры для значений длин от 1 до 20 дюймов.
# 1 дюйм = 2,54 см. (1 балл)

# Вариант 1
x = 1
while x <= 20:
    print('{:d} дюйм = {:.2f}'.format(x, 2.54 * x))
    x += 1
# Вариант 2
for x in range(1, 21):
    print('{:d} дюйм = {:.2f}'.format(x, 2.54 * x))

# 2) Напишите программу вывода всех четных чисел от 2 до 100 включительно. (2 балла) 

# Вариант 1
x = 2
while x <= 100:
    print(x)
    x += 2

# Вариант 2
for x in range(2, 101, 2):
    print(x)

# 3) Составьте программу, вычисляющую сумму квадратов всех чисел от 1 до N. (1 балл) 

# Вариант 1
N = int(input('Введите число: '))
x = 1
summ = 0
while x <= N:
    summ += x ** 2
    x += 1
print('Сумма квадратов чисел равна: {:d}'.format(summ))

# Вариант  2
N = int(input('Введите число: '))
summ = 0
for x in range(1, N + 1):
    summ += x ** 2
print('Сумма квадратов чисел равна: {:d}'.format(summ))

# 4) Напишите программу, определяющую сумму всех нечетных чисел от 1 до 99. (2 балла)

# Вариант 1
x = 1
summ = 0
while x <= 99:
    summ += x
    x += 2
print('Сумма нечётных чмсел = {:d}'.format(summ))

# Вапиант 2
summ = 0
for x in range(1, 100, 2):
    summ += x
print('Сумма нечётных чисел равна: {:d}'.format(summ))

# 5) С помощью repeat напишите программу, которая требует у вас пароль, например 111. Если пароль правильный, то заполняет
# все строки экрана сообщением «Молодец». Если после пятой попытки пароль все равно неверен, выходит из программы. (2 балла) 

# Циклы с постусловием в Питоне не поддерживабтся

passwd = '111'
for x in range(5):
    if x != 0:
        print('Повторите попытку')
    curr_passwd = input('Введите пароль: ')
    if curr_passwd == passwd:
        print('Молодец!\n' * 80)
        break
    print('Пароль не верен!')
else:
    print('Вы ввели 5 неверных попыток!')

# 6) Составьте программу получения в порядке убывания всех делителей данного числа. (2 балла)
N = int(input('Введите число: '))
n = N
print("Делители числа {:d}: ".format(N))
while n >= 1:
    if not N % n:
        print(n)
    n -= 1

# 7) Составьте программу определения наибольшего общего делителя двух натуральных чисел. (3 балла)


# Алгоритм Евклида (вычитанием)
a = int(input('Первое число: '))
b = int(input('Второе число: '))
while a != b:
    if a > b:
        a -= b
    else:
        b -= a
print('НОД равен {:d}'.format(a))

# Алгоритм Евклида (делением)
a = int(input('Первое число: '))
b = int(input('Второе число: '))
while a != 0 and b != 0:
    if a > b:
        a %= b
    else:
        b %= a
print('НОД равен {:d}'.format(a + b))

# 8) Составьте программу определения наименьшего общего кратного двух натуральных чисел. (3 балла) 
# НОК(A, B) x НОД(A, B) = A x B - для вычисления НОД используется Алгоритм Евклида (делением)

a = int(input('Первое число: '))
b = int(input('Второе число: '))
A = a
B = b
while a != 0 and b != 0:
    if a > b:
        a %= b
    else:
        b %= a
print('НОK равен {:d}'.format((A * B) // (a + b)))

# 9) Составьте программу, подсчитывающую количество цифр вводимого вами целого неотрицательного числа.
# Можно использовать операцию целочисленного деления. (3 балла) 
N = int(input('Введите число: '))
i = 0
while N:
    N //= 10
    i += 1
print('Цифр в числе {:d}: '.format(i))

# 10) Составьте программу, определяющую максимальное из всех вводимых вами чисел.
# Концом ввода чисел является введенное число 0. (2 балла) 

question = 'Введите число (или 0 для выхода): '
x = int(input(question))
maxx = x
while x:
    if x > maxx:
        maxx = x
    x = int(input(question))
print('Максимальное введённое число равно {:d}'.format(maxx))

# 11) Найти наибольшее и наименьшее значение функции y=3x2+x-4, если на заданном интервале [a,b] Х изменяется с шагом 0,1. (2 балла)
a = float(input('Введите a: '))
b = float(input('Введите b: '))
step = 0.1
ymin = 3 * a ** 2 + a - 4
ymax = 3 * a ** 2 + a - 4
x = a
while x <= b:
    y = 3 * x ** 2 + x - 4
    if y > ymax:
        ymax = y
    if y < ymin:
        ymin = y
    x += step
print('Максимум = {:.2f}, минимум = {:.2f}'.format(ymax, ymin))

#   
# 12) Вычислите сумму квадратов N четных натуральных чисел. (2 балла)

summ = 0
N = int(input('Введите число четных чисел: '))
x = 1
n = 2
while x <= N:
    summ += n
    x += 1
    n += 2
print('Сумма квадратов равна {:d}'.format(summ))

# 13) Вычислить:  1+2+4+8+…+256 (3 балла) 
x = 1
summ = 0
while x <= 256:
    summ += x
    x *= 2
print(summ)

# 14) Вычислить:  (1+2)*(1+2+3)*…*(1+2+…+10) (3 балла)
summ_val = 0
y = 1
while y <= 10:
    summ = 0
    x = 1
    while x <= y:
        summ += x
        x += 1
    summ_val += summ
    y += 1
print(summ_val)

# 16) В бригаде, работающей на уборке сена, имеется N косилок.
# Первая из них работала M часов, а каждая следующая на 10 минут больше, чем предыдущая. Сколько часов проработала вся бригада? (2 балла)
# Для парралельного режима работы
N = int(input('Число косилок: '))
M = int(input('Часов работала первая косилка: '))
M_min = M * 60
summ = 0
for x in range(0, N):
    summ += (M_min + 10 * x)
print('Бригада поработала {:d} ч. {:0>2d} мин.'.format(summ // 60, summ % 60))

# 17) Билет называют «счастливым», если в его номере сумма первых трех цифр равна сумме последних трех.
# Подсчитать число тех «счастливых» билетов, у которых сумма трех цифр равна 13. Номер билета может быть от 000000 до 999999. (3 балла) 
summ = 0
for x in range(0, 1000000):
    str_x = '{:0>6d}'.format(x)
    summ_str_h = int(str_x[0]) + int(str_x[1]) + int(str_x[2])
    summ_str_l = int(str_x[3]) + int(str_x[4]) + int(str_x[5])
    if summ_str_h == summ_str_l and summ_str_l == 13:
        summ += 1
print('Число «счастливых» билетов, у которых сумма трех цифр равна 13 = ', summ)

#   
# 18) В ЭВМ вводятся по очереди координаты N точек. Определить, сколько из них попадает в круг радиусом R с центром в точке (a,b). (1 балл) 
#   

N = int(input('Число точек: '))
R = float(input("Введите радиус круга: "))
a, b = list(map(float, input('Введите a, b: ').split(',')))
summ = 0
for n in range(N):
    x, y = list(map(float, input('Введите x, y: ').split(',')))
    if (x - a) ** 2 + (y - b) ** 2 <= R ** 2:
        summ += 1
print(summ)

# 19) В ЭВМ вводятся по очереди данные о росте N учащихся класса. Определить средний рост учащихся в классе. (1 балл) 
# По-видимому имеется ввиду среднеарифметическое

N = int(input('Число учеников: '))
summ = 0
for x in range(N):
    rost = int(input('Ведите рост ученика в см. (без дробной части): '))
    summ += rost
print('Средний рост учащихся в классе равен, см', summ // N)
#   
# 20) Составьте программу, суммирующую штрафное время команд при игре в хоккей.
# Выводить на экран суммарное штрафное время обеих команд после любого его изменения. После окончания игры выдать итоговое сообщение. (1 балл) 


#   
# 21) Составьте программу вычисления степени числа A с натуральным показателем N.
# Записать варианты программы со всеми видами циклов: while, repeat, for. (3 балла) Цикла с постусловием нет в Python
A = float(input('Введите число: '))
N = int(input('Введите натуральный показатель степени: '))
if N < 0:
    print('Неверный показатель степени ')
else:
    B = 1.0
    for x in range(0, N):
        B *= A
print(B)

A = float(input('Введите число: '))
N = int(input('Введите натуральный показатель степени: '))
if N < 0:
    print('Неверный показатель степени ')
else:
    B = 1.0
    x = 0
    while x < N:
        B *= A
        x += 1
print(B)

#   
# 22) Составьте программу, вычисляющую A*B, не пользуясь операцией умножения. А и B любое натуральное число. (2 балла)
A = int(input('Введите натуральное число A: '))
B = int(input('Введите натуральное число B: '))
C = 0
for x in range(0, B):
    C += A
print('A + B =', C)

#   
# 23) Для заданного числа N составьте программу вычисления суммы S=1+1/2+1/3+1/4+…+1/N, где N – натуральное число. (2 балла) 
N = int(input('Введите натуральное число ( > 0): '))
summ = 0
for n in range(1, N + 1):
    summ += (1 / n)
print(summ)

# 24) Каждая бактерия делится на две в течение одной минуты. В начальный момент имеется одна бактерия.
# Составьте программу, которая рассчитывает количество бактерий на заданное вами целое значение момента времени (15 минут, 7 минут и т.п.). (2 балла) 
# А зачем тут цикл? достаточно 2 возвести в степень времени
print(2 ** int(input('Введите сколько минут прошло: ')))

# 25) Составьте программу вывода на экран всех простых чисел, не превосходящих заданного N.
# Простым называется натуральное число больше единицы, имеющее только два делителя: единицу и само это число. (2 балла))
N = int(input('Введите натуральное число ( > 0): '))
for x in range(1, N + 1):
    n = x
    S = []
    while n >= 1:
        if not x % n:
            S.append(n)
        n -= 1
    if len(S) == 2 or len(S) == 1:
        print(x)

#   
# 26) В 1202г. Итальянский математик Леонард Пизанский (Фибоначчи) предложил такую задачу:
# пара кроликов каждый месяц дает приплод – двух кроликов (самца и самку), от которых через два месяца уже получается новый приплод,
# Сколько кроликов будет через год, если в начале года имелась одна пара?
# Согласно условию задачи числа, соответствующие количеству кроликов, которые появляются через каждый месяц,
# составляют последовательность 1, 1, 2, 3, 5, 8, 13, 21, 37, …
# Составьте программу, позволяющую найти все числа Фибоначчи, меньшие заданного числа N. (5 баллов) 

# Откуда 37? в задаче Ошибка!!! N9 = 34, а не 37!

N = int(input('Введите натуральное число ( > 0): '))
S = []
a, b = 0, 1
while True:
    a, b = b, a + b
    if a >= N:
        break
    S.append(a)
print(S)

#   
# 27) Составьте программу, которая выводит полную запись десятичного числа 42*4*, в которой пропущены две цифры
# (обозначены *), если известно, что данное число кратно 72. (4 балла) 

for x in range(0, 10):
    for y in range(0, 10):
        N = int('42{:d}4{:d}'.format(x, y))
        if N % 72 == 0:
            print(N)  # таких чисел 2! 42048, 42840

#   
# 28) В старояпонском календаре был принят 60-летний цикл, состоявший из пяти 12-летних подциклов. 
# Подциклы обозначались названиями цвета: зеленый, красный, желтый, белый и черный. 
# Внутри каждого подцикла годы носили названия животных: крысы, коровы, тигра, зайца, дракона, змеи, лошади, овцы, обезьяны,
# курицы, собаки и свиньи. 1984 – год зеленой крысы – был началом очередного цикла. 
# Напишите программу, которая вводит номер некоторого года нашей эры и печатает его название по старояпонскому календарю. (4 балла) 


#   
# 29) Составьте программу, которая по введенному вами числу N (от 1 до 100) напечатает все натуральные числа X русскими буквами
# (двадцать, сорок пять и т.д.). Например, для числа 4 программа должная напечатать «один», так как в слове «один» четыре буквы.
# Для числа 9 программа должная напечатать «сорок пять», так как в записи числа «сорок пять» девять букв. (7 баллов)
#  
#   
# 30) Запишите любое число от 1 до 1000, введенное пользователем, русскими буквами.
# Например, 2 – два, 150 – сто пятьдесят. (5 баллов)

N = int(input('Введите число: '))

'тысяча', 'девятьсот', 'восемьсот', 'семьсот', 'шестьсот', 'пятьсот', 'четыреста', 'триста', 'двести', 'восемьдесят',
'семьдесят', 'шестьдесят', 'пятьдесят', 'сорок', 'тридцать', 'двадцать', 'девятнадцать', 'восемнадцать', 'семнадцать',
'шестнадцать', 'пятнадцать', 'четырнадцать', 'тринадцать', 'двенадцать', 'одиннадцать', 'десять', 'девять', 'восемь',
'семь', 'шесть', 'пять', 'четыре', 'три', 'два', 'один'

#   
# На «5» необходимо набрать 20 баллов 
# На «4» необходимо набрать 15 баллов 
# На «3» необходимо набрать 10 баллов 
#   
# 31) Составить программу нахождения наименьшего общего кратного двух чисел.
# (Наименьшее общее кратное чисел 'a' и 'b' - это число, которое делиться и на число 'a' и на число 'b' без остатка и является наименьшим)
# повторяет задачу 8

#   
# Задачки на смекалку (каждая 10 баллов) 
#   
# 1) Найти все двузначные числа, сумма цифр которых не меняется при умножении числа на 2,3,4,5,6,7,8,9. 
#   
# 2) Найти все трехзначные числа, сумма цифр которых равна данному целому числу. 
#   
# 3) Найти количество всех трехзначных чисел, средняя цифра которых равна сумме первой и второй цифр. 
#   
# 4) Найти все трехзначные числа, которые можно представить разностью между квадратом числа, образованного первыми двумя цифрами и квадратом третьей цифры. 
#   
# 5) Найти все двузначные числа, сумма квадратов цифр которых делится на 17. 
for x in range(10, 100):
    if (int(str(x)[0]) ** 2 + int(str(x)[1]) ** 2) % 17 == 0:
        print(x)

#   
# 6) Найти все трехзначные числа, представимые в виде сумм факториалов своих цифр.


#   
# 7) Найти двузначное число, обладающее тем свойством, что куб суммы его цифр равен квадрату самого числа.
for x in range(10, 100):
    if (int(str(x)[0]) + int(str(x)[1])) ** 3 == x ** 2:
        print(x)

#   
# 8) Найти двузначное число, равное утроенному произведению его цифр.

for x in range(10, 100):
    if 3 * (int(str(x)[0]) * int(str(x)[1])) == x:
        print(x)
#   
# 9) В каких двузначных числах удвоенная сумма цифр равна их произведению?

for x in range(10, 100):
    if 2 * (int(str(x)[0]) + int(str(x)[1])) == int(str(x)[0]) * int(str(x)[1]):
        print(x)

# 10) Можно ли заданное натуральное число М представить в виде суммы квадратов двух натуральных чисел? Написать программу решения этой задачи. 
#
#
